name: Setup Node on Windows with NVM

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

jobs:
  setup-node:
    runs-on: windows-latest
    steps:
      # Step 1: Checkout Code
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Check if version exists in list
        id: check_version
        run: |
          $versionInput = "${{ inputs.version }}"
          $normalizedInput = $versionInput.TrimStart("v")  # remove 'v' if present
          $versionList = Get-Content "versions.txt" | ForEach-Object { $_.Trim().TrimStart("v") }

          if ($normalizedInput -like "*`**") {
            $prefix = $normalizedInput.TrimEnd('*')
            $match = $versionList | Where-Object { $_ -like "$prefix*" }
          } else {
            $match = $versionList | Where-Object { $_ -eq $normalizedInput }
          }

          if (-not $match) {
            Write-Error " No matching version found for input: $versionInput"
            exit 1
          } else {
            # Optional: pick the first matching version
            $selectedVersion = $match | Sort-Object -Descending | Select-Object -First 1
            Write-Host " Matched version: $selectedVersion"
            echo "node_version=$selectedVersion" >> $env:GITHUB_ENV
          }
          # Use NVM to switch Node.js version
          Write-Host " Switching Node.js version using NVM..."
          nvm use $selectedVersion

          # Confirm version
          node -v
