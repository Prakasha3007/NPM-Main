name: Reusable NPM Workflow

on:
  workflow_call:
    inputs:
      command:
        required: true
        type: string
      workingDir:
        required: true
        type: string
      verbose:
        required: false
        type: boolean
        default: false
      customCommand:
        required: false
        type: string
      customRegistry:
        required: false
        type: string

jobs:
  npm-task:
    runs-on: windows-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Check and Install npm
        run: |
          npm -v >nul 2>&1
          if %ERRORLEVEL% NEQ 0 (
            echo npm is not installed, installing npm...
            choco install nodejs-lts -y
            echo npm installed. Verifying npm...
            npm -v
          ) else (
            echo npm is already installed.
            npm -v
          )
        shell: cmd

      - name: Debug Pre-installed Tools
        run: |
            node -v
            npm -v
        shell: cmd   

      - name: Verify Chocolatey
        run: choco --version
        shell: cmd

      - name: Install dependencies using npm ci
        run: npm ci
        shell: cmd

      - name: Verify Working Directory Contains package.json
        run: |
          cd ${{ inputs.workingDir }}
          if not exist "%{{ inputs.workingDir }}\package.json" (
            echo Error: package.json not found in the specified working directory: %{{ inputs.workingDir }}  exit /b 1
          )
        shell: cmd

      - name: Configure Custom Registry
        if: ${{ inputs.customRegistry != '' }}
        working-directory: ${{ inputs.workingDir }}
        run: |
          echo registry=${{ inputs.customRegistry }} >> .npmrc
        shell: cmd

      - name: Run NPM or Custom Command
        working-directory: ${{ inputs.workingDir }}
        run: |
          if "${{ inputs.command }}"=="custom" (
            echo Running Custom Command : ${{ inputs.customCommand }}
            ${{ inputs.customCommand }}
          ) else if "${{ inputs.verbose }}"=="true" (
            echo Running npm ${{ inputs.command }} --verbose
            ${{ inputs.command }}
          ) else (
            echo Running npm ${{ inputs.command }} --Without Verbose
            ${{ inputs.command }}
          )
        shell: cmd
